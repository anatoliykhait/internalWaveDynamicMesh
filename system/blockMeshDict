/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale         1.0;

circElem      20;
radElem       20;
bottomElem    30;
sideElem      40;
topElem       50;

#include   "geometry"

vertices
(
    ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)" ) // 0
    ( #calc"-$cylRad*cos(M_PI/4.0)"     #calc"-$domainWidth"   #calc"$cylRad*cos(M_PI/4.0)"   ) // 1
    ( #calc"-$cylRad*cos(M_PI/4.0)"            $domainWidth    #calc"$cylRad*cos(M_PI/4.0)"   ) // 2
    ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"$outerRad*cos(M_PI/4.0)" ) // 3

    ( #calc"$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)" ) // 4
    ( #calc"$cylRad*cos(M_PI/4.0)"     #calc"-$domainWidth"   #calc"$cylRad*cos(M_PI/4.0)"   ) // 5
    ( #calc"$cylRad*cos(M_PI/4.0)"            $domainWidth    #calc"$cylRad*cos(M_PI/4.0)"   ) // 6
    ( #calc"$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"$outerRad*cos(M_PI/4.0)" ) // 7

    ( #calc"$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" ) // 8
    ( #calc"$cylRad*cos(M_PI/4.0)"     #calc"-$domainWidth"   #calc"-$cylRad*cos(M_PI/4.0)"   ) // 9
    ( #calc"$cylRad*cos(M_PI/4.0)"            $domainWidth    #calc"-$cylRad*cos(M_PI/4.0)"   ) // 10
    ( #calc"$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" ) // 11

    ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" ) // 12
    ( #calc"-$cylRad*cos(M_PI/4.0)"     #calc"-$domainWidth"   #calc"-$cylRad*cos(M_PI/4.0)"   ) // 13
    ( #calc"-$cylRad*cos(M_PI/4.0)"            $domainWidth    #calc"-$cylRad*cos(M_PI/4.0)"   ) // 14
    ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" ) // 15

    ( $tankLeft                         #calc"-$domainWidth"   $tankBottom ) // 16
    ( $tankLeft                                $domainWidth    $tankBottom ) // 17
    ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   $tankBottom ) // 18
    ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    $tankBottom ) // 19
    ( #calc"$outerRad*cos(M_PI/4.0)"    #calc"-$domainWidth"   $tankBottom ) // 20
    ( #calc"$outerRad*cos(M_PI/4.0)"           $domainWidth    $tankBottom ) // 21
    ( $tankRight                        #calc"-$domainWidth"   $tankBottom ) // 22
    ( $tankRight                               $domainWidth    $tankBottom ) // 23

    ( $tankLeft    #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" ) // 24
    ( $tankLeft           $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" ) // 25
    ( $tankRight   #calc"-$domainWidth"   #calc"-$outerRad*cos(M_PI/4.0)" ) // 26
    ( $tankRight          $domainWidth    #calc"-$outerRad*cos(M_PI/4.0)" ) // 27

    ( $tankLeft    #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)" ) // 28
    ( $tankLeft           $domainWidth    #calc"$outerRad*cos(M_PI/4.0)" ) // 29
    ( $tankRight   #calc"-$domainWidth"   #calc"$outerRad*cos(M_PI/4.0)" ) // 30
    ( $tankRight          $domainWidth    #calc"$outerRad*cos(M_PI/4.0)" ) // 31

    ( $tankLeft                         #calc"-$domainWidth"   $tankTop ) // 32
    ( $tankLeft                                $domainWidth    $tankTop ) // 33
    ( #calc"-$outerRad*cos(M_PI/4.0)"   #calc"-$domainWidth"   $tankTop ) // 34
    ( #calc"-$outerRad*cos(M_PI/4.0)"          $domainWidth    $tankTop ) // 35
    ( #calc"$outerRad*cos(M_PI/4.0)"    #calc"-$domainWidth"   $tankTop ) // 36
    ( #calc"$outerRad*cos(M_PI/4.0)"           $domainWidth    $tankTop ) // 37
    ( $tankRight                        #calc"-$domainWidth"   $tankTop ) // 38
    ( $tankRight                               $domainWidth    $tankTop ) // 39
);

blocks
(
    hex ( 0  1  2  3  4  5  6  7  ) ( $radElem 1 $circElem ) simpleGrading ( 1 1 1 )
    hex ( 4  5  6  7  8  9  10 11 ) ( $radElem 1 $circElem ) simpleGrading ( 1 1 1 )
    hex ( 8  9  10 11 12 13 14 15 ) ( $radElem 1 $circElem ) simpleGrading ( 1 1 1 )
    hex ( 12 13 14 15 0  1  2  3  ) ( $radElem 1 $circElem ) simpleGrading ( 1 1 1 )

    hex ( 16 18 19 17 24 12 15 25 ) ( $sideElem  1 $bottomElem ) simpleGrading ( 1 1 1 )
    hex ( 18 20 21 19 12 8  11 15 ) ( $circElem  1 $bottomElem ) simpleGrading ( 1 1 1 )
    hex ( 20 22 23 21 8  26 27 11 ) ( $sideElem  1 $bottomElem ) simpleGrading ( 1 1 1 )

    hex ( 24 12 15 25 28 0  3  29 ) ( $sideElem 1 $circElem ) simpleGrading ( 1 1 1 )
    hex ( 8  26 27 11 4  30 31 7  ) ( $sideElem 1 $circElem ) simpleGrading ( 1 1 1 )

    hex ( 28 0  3  29 32 34 35 33 ) ( $sideElem 1 $topElem ) simpleGrading ( 1 1 1 )
    hex ( 0  4  7  3  34 36 37 35 ) ( $circElem 1 $topElem ) simpleGrading ( 1 1 1 )
    hex ( 4  30 31 7  36 38 39 37 ) ( $sideElem 1 $topElem ) simpleGrading ( 1 1 1 )
);

edges
(
    arc  1   5  ( 0.0               #calc"-$domainWidth"   $cylRad         )
    arc  2   6  ( 0.0                      $domainWidth    $cylRad         )
    arc  5   9  ( $cylRad           #calc"-$domainWidth"   0.0             )
    arc  6   10 ( $cylRad                  $domainWidth    0.0             )
    arc  9   13 ( 0.0               #calc"-$domainWidth"   #calc"-$cylRad" )
    arc  10  14 ( 0.0                      $domainWidth    #calc"-$cylRad" )
    arc  13  1  ( #calc"-$cylRad"   #calc"-$domainWidth"   0.0             )
    arc  14  2  ( #calc"-$cylRad"          $domainWidth    0.0             )
);

boundary
(
    top
    {
        type wall;
        faces
        (
            ( 32 34 35 33 )
            ( 34 36 37 35 )
            ( 36 38 39 37 )
        );
    }

    walls
    {
        type wall;
        faces
        (
            ( 28 32 33 29 )
            ( 24 28 29 25 )
            ( 16 24 25 17 )
            ( 16 17 19 18 )
            ( 18 19 21 20 )
            ( 20 21 23 22 )
            ( 22 23 27 26 )
            ( 26 27 31 30 )
            ( 30 31 39 38 )
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            ( 2  3  7  6  )
            ( 6  7  11 10 )
            ( 10 11 15 14 )
            ( 14 15 3  2  )
            ( 0  1  5  4  )
            ( 4  5  9  8  )
            ( 8  9  13 12 )
            ( 1  0  12 13 )

            ( 29 33 35 3  )
            ( 3  35 37 7  )
            ( 7  37 39 31 )
            ( 25 29 3  15 )
            ( 11 7  31 27 )
            ( 17 25 15 19 )
            ( 19 15 11 21 )
            ( 21 11 27 23 )

            ( 0  34 32 28 )
            ( 0  4  36 34 )
            ( 4  30 38 36 )
            ( 0  28 24 12 )
            ( 4  8  26 30 )
            ( 12 24 16 18 )
            ( 8  12 18 20 )
            ( 8  20 22 26 )
        );
    }

    cylinder
    {
        type wall;
        faces
        (
            ( 1  2  6  5  )
            ( 5  6  10 9  )
            ( 9  10 14 13 )
            ( 2  1  13 14 )
        );
    }
);

// ************************************************************************* //
